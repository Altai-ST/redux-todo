{"version":3,"sources":["components/Link/index.jsx","redux/actions/index.js","container/FilterLink/index.js","components/Footer/index.jsx","container/AddTodo/index.js","components/Todo/index.jsx","components/TodoList/index.jsx","container/VisibleTodoList/index.js","App.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Link","active","children","onClick","Button","disabled","style","marginLeft","variant","color","ADD_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","VisibilityFilter","SHOW_ALL","SHOW_COMPLETE","SHOW_ACTIVE","nextTodoId","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLink","SHOW_COMPLETED","input","onSubmit","e","text","preventDefault","value","id","ref","node","Todo","completed","textDecoration","backgroundColor","className","TodoList","todos","toggleTodo","map","todo","getVisibileTodos","t","Error","App","VisibleTodoList","initialState","store","createStore","action","Object","assign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b143b1c6.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\"\r\n\r\nconst Link = ({ active, children, onClick }) => {\r\n  return(\r\n    <Button onClick={onClick}\r\n    disabled={active}\r\n    style={{\r\n      marginLeft: '4px'\r\n    }}\r\n    variant=\"contained\" \r\n    color='primary'\r\n  >{children}</Button>\r\n  )}\r\n\r\nexport default Link","export const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\n\r\nexport const VisibilityFilter = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETE: 'SHOW_COMPLETE',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\nlet nextTodoId = 0;\r\n\r\nexport const addTodo = text =>({\r\n    type: ADD_TODO,\r\n    id: nextTodoId++,\r\n    text\r\n});\r\n\r\nexport const setVisibilityFilter = filter =>({\r\n    type: SET_VISIBILITY_FILTER,\r\n    filter\r\n})\r\n\r\nexport const toggleTodo = id =>({\r\n    type: TOGGLE_TODO,\r\n    id\r\n})\r\n","import { connect } from \"react-redux\"\r\nimport Link from \"../../components/Link\"\r\nimport { setVisibilityFilter } from \"../../redux/actions\"\r\n\r\nconst mapStateToProps =(state, ownProps)=>({\r\n        active: ownProps.filter === state.visibilityFilter\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n      onClick: () => {\r\n        dispatch(setVisibilityFilter(ownProps.filter))\r\n      }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Link)","import FilterLink from '../../container/FilterLink'\r\nimport { VisibilityFilter } from '../../redux/actions'\r\n\r\nconst Footer = () => (\r\n    <div>\r\n        <span>Show: </span>\r\n        <FilterLink filter={VisibilityFilter.SHOW_ALL}>All</FilterLink>\r\n        <FilterLink filter={VisibilityFilter.SHOW_ACTIVE}>Active</FilterLink>\r\n        <FilterLink filter={VisibilityFilter.SHOW_COMPLETED}>Completed</FilterLink>\r\n    </div>\r\n)\r\n\r\nexport default Footer","import { Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {addTodo} from '../../redux/actions/index'\r\nimport './AddTodo.css'\r\n\r\nlet AddTodo = ({dispatch})=>{\r\n    let input;\r\n    return(\r\n        <div>\r\n            <form\r\n                onSubmit={e=>{\r\n                    e.preventDefault();\r\n                    dispatch(addTodo(input.value));\r\n                    input.value = '';\r\n                }}\r\n            >\r\n                <input ref={node => (input = node)}/>\r\n                <Button type='submit' variant=\"contained\" color='primary' >Add Todo</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(AddTodo)","  import React from 'react';\r\n  import './Todo.css'\r\nconst Todo = ({ onClick, completed, text, id }) => {\r\n  return(\r\n      <li\r\n        onClick={onClick}\r\n        style={{\r\n          textDecoration: completed ? 'line-through' : 'none',\r\n          backgroundColor: completed ? 'red' : 'green'\r\n        }}\r\n      >\r\n        <span className='num'>{id + 1}</span>{text}\r\n      </li>\r\n  )}\r\n\r\nexport default Todo","import Todo from '../Todo'\r\nimport './TodoList.css'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => {\r\n  return(\r\n  <ol>\r\n    {todos.map(todo => {\r\n      return(\r\n      <Todo key={todo.id}\r\n        {...todo}\r\n        onClick={()=>toggleTodo(todo.id)}\r\n      />\r\n    )})}\r\n  </ol>\r\n)}\r\n\r\n\r\nexport default TodoList;","import { connect } from \"react-redux\";\r\nimport TodoList from \"../../components/TodoList\";\r\nimport { VisibilityFilter } from \"../../redux/actions\";\r\nimport { toggleTodo } from \"../../redux/actions\";\r\n\r\nconst getVisibileTodos = (todos, filter)=>{\r\n    switch (filter){\r\n        case VisibilityFilter.SHOW_ALL:\r\n            return todos\r\n        case VisibilityFilter.SHOW_COMPLETED:\r\n            return todos.filter(t => t.completed)\r\n        case VisibilityFilter.SHOW_ACTIVE:\r\n            return todos.filter(t => !t.completed)\r\n        default:\r\n            throw new Error('Unknown filter: ' + filter)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    todos: getVisibileTodos(state.todos, state.visibilityFilter), \r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TodoList)","\nimport './App.css';\nimport Footer from './components/Footer'\nimport AddTodo from './container/AddTodo'\nimport VisibleTodoList from './container/VisibleTodoList/index';\n\nfunction App() {\n  return (\n      <div className=\"App\"> \n        <div className='contant'>\n          <h1 >Todo List</h1>\n          <AddTodo />\n          <VisibleTodoList/>\n          <Footer />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import { ADD_TODO, SET_VISIBILITY_FILTER, VisibilityFilter, TOGGLE_TODO } from \"../actions\"\r\n\r\nconst initialState ={\r\n    visibilityFilter: VisibilityFilter.SHOW_ALL,\r\n    todos: []\r\n}\r\n\r\nexport const todoApp =(state = initialState, action)=>{\r\n    switch (action.type){\r\n        case ADD_TODO:\r\n            return Object.assign({}, state, {\r\n                todos: [\r\n                    ...state.todos,\r\n                    {\r\n                        text: action.text,\r\n                        completed: false,\r\n                        id: action.id\r\n                    }\r\n                ]\r\n            })\r\n\r\n        case SET_VISIBILITY_FILTER:\r\n            return Object.assign({}, state,{\r\n                visibilityFilter: action.filter\r\n            })\r\n\r\n        case TOGGLE_TODO :\r\n            return Object.assign({}, state, {\r\n                todos: state.todos.map((todo, id) => {\r\n                    if (id === action.id) {\r\n                        return Object.assign({}, todo, {\r\n                            completed: !todo.completed,\r\n                        })\r\n                    }\r\n                    return todo;\r\n                })\r\n            })\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import { createStore } from \"redux\";\r\nimport { todoApp } from \"../reducers\";\r\n\r\nexport const store = createStore(todoApp)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport {store} from './redux/store/index'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}